#!/usr/bin/env bash
set -euo pipefail

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
error_handler() {
    echo "‚ùå –û–®–ò–ë–ö–ê –Ω–∞ —Å—Ç—Ä–æ–∫–µ $1: –∫–æ–º–∞–Ω–¥–∞ '$2' –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –∫–æ–¥–æ–º $3"
    echo "üìç –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ –º–æ–º–µ–Ω—Ç –æ—à–∏–±–∫–∏:"
    echo "   PWD: $(pwd)"
    echo "   APP_PATH: ${APP_PATH:-'–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}"
    echo "   BUILD_DIR: ${BUILD_DIR:-'–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}"
    exit $3
}

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
trap 'error_handler ${LINENO} "$BASH_COMMAND" $?' ERR

echo "üöÄ –£–ü–ê–ö–û–í–ö–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø"
echo "–í—Ä–µ–º—è: $(date)"
echo "üîß –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
echo "   PWD: $(pwd)"
echo "   BUILT_PRODUCTS_DIR: ${BUILT_PRODUCTS_DIR:-'–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}"
echo "   PRODUCT_NAME: ${PRODUCT_NAME:-'–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}"
echo "   SRCROOT: ${SRCROOT:-'–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}"
echo "   TARGET_NAME: ${TARGET_NAME:-'–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}"
echo "   PROJECT_DIR will be: $(cd "$(dirname "$0")/.." && pwd)"

# ===================================================================
# –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø - –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –º–µ—Å—Ç–æ –≥–¥–µ –∑–∞–¥–∞—é—Ç—Å—è –≤—Å–µ –ø—É—Ç–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
# ===================================================================

PROJECT_DIR="$(cd "$(dirname "$0")/.." && pwd)"
APP_NAME="${PRODUCT_NAME:-Killah Prototype}.app"
PYTHON_VERSION="3.12"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é, –Ω–æ –±—É–¥–µ—Ç –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –ø–æ–∑–∂–µ
VENV_NAME="venv"
# URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ Python.framework
PYTHON_FRAMEWORK_URL="https://github.com/python/cpython-bin-deps/releases/download/20231002/cpython-3.12.0%2B20231002-x86_64-apple-darwin-install_only.tar.gz"
PYTHON_FRAMEWORK_LOCAL="/Library/Frameworks/Python.framework"
MODEL_FILE_NAME="gemma-3-4b-pt-q4_0.gguf" # <--- –î–û–ë–ê–í–õ–ï–ù–û: –ò–º—è —Ñ–∞–π–ª–∞ –º–æ–¥–µ–ª–∏

# –ü—É—Ç–∏ —Å–±–æ—Ä–∫–∏ –∏–∑ Xcode (—Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
if [ -z "${BUILT_PRODUCTS_DIR:-}" ]; then
  echo "‚ö†Ô∏è  BUILT_PRODUCTS_DIR –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
  BUILD_DIR="$PROJECT_DIR/build/Debug"
else
  BUILD_DIR="$BUILT_PRODUCTS_DIR"
fi

APP_PATH="$BUILD_DIR/$APP_NAME"
FRAMEWORKS_DIR="$APP_PATH/Contents/Frameworks"
RESOURCES_DIR="$APP_PATH/Contents/Resources"
VENV_DST="$RESOURCES_DIR/$VENV_NAME"

echo "üìÅ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: $APP_PATH"

# ===================================================================
# –ü–†–û–í–ï–†–ö–ò –ò –ü–û–î–ì–û–¢–û–í–ö–ê
# ===================================================================

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ .app
if [ ! -d "$APP_PATH" ]; then
  echo "‚ùå .app –Ω–µ –Ω–∞–π–¥–µ–Ω: $APP_PATH"
  exit 1
fi
echo "‚úÖ .app –Ω–∞–π–¥–µ–Ω"

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏
mkdir -p "$FRAMEWORKS_DIR"
mkdir -p "$RESOURCES_DIR"

# ===================================================================
# –ü–û–õ–£–ß–ï–ù–ò–ï PYTHON.FRAMEWORK
# ===================================================================

get_python_framework() {
  local framework_dst="$FRAMEWORKS_DIR/Python.framework"
  
  if [ -d "$PYTHON_FRAMEWORK_LOCAL" ]; then
    echo "üìã –ö–æ–ø–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π Python.framework..."
    
    # –£–º–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ: —Å–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è —Å —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫
    echo "üîó –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫..."
    if cp -R -L "$PYTHON_FRAMEWORK_LOCAL" "$FRAMEWORKS_DIR/" 2>/dev/null; then
      echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π Python.framework —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Å –ø–æ–ª–Ω—ã–º —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º —Å—Å—ã–ª–æ–∫"
    else
      echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º (–±–∏—Ç—ã–µ —Å–∏–º–ª–∏–Ω–∫–∏), –ø—Ä–æ–±—É–µ–º –±–µ–∑ —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏—è..."
      # –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—á–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
      [ -d "$framework_dst" ] && rm -rf "$framework_dst"
      
      if cp -R -P "$PYTHON_FRAMEWORK_LOCAL" "$FRAMEWORKS_DIR/" 2>/dev/null; then
        echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π Python.framework —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –±–µ–∑ —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫"
      else
        echo "‚ùå –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º rsync –∏–ª–∏ –≤—ã–±–æ—Ä–æ—á–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ..."
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º rsync –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
        if command -v rsync >/dev/null 2>&1; then
          echo "üîÑ –ü—ã—Ç–∞–µ–º—Å—è rsync..."
          if rsync -av --exclude='*/PrivateHeaders' "$PYTHON_FRAMEWORK_LOCAL/" "$framework_dst/" 2>/dev/null; then
            echo "‚úÖ Python.framework —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ rsync (–∏—Å–∫–ª—é—á–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ PrivateHeaders)"
          else
            echo "‚ùå rsync —Ç–æ–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –¥–µ–ª–∞–µ–º –≤—ã–±–æ—Ä–æ—á–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ..."
            manual_copy_framework "$PYTHON_FRAMEWORK_LOCAL" "$framework_dst"
          fi
        else
          echo "üìÅ rsync –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –¥–µ–ª–∞–µ–º –≤—ã–±–æ—Ä–æ—á–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ..."
          manual_copy_framework "$PYTHON_FRAMEWORK_LOCAL" "$framework_dst"
        fi
      fi
    fi
  else
    echo "‚ö†Ô∏è  –õ–æ–∫–∞–ª—å–Ω—ã–π Python.framework –Ω–µ –Ω–∞–π–¥–µ–Ω: $PYTHON_FRAMEWORK_LOCAL"
    echo "üì• –°–∫–∞—á–∏–≤–∞–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —Å–æ–±—Ä–∞–Ω–Ω—ã–π Python.framework..."
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    local temp_dir=$(mktemp -d)
    trap "rm -rf $temp_dir" EXIT
    
    local archive_path="$temp_dir/python-framework.tar.gz"
    
    echo "üåê –°–∫–∞—á–∏–≤–∞–µ–º —Å: $PYTHON_FRAMEWORK_URL"
    if curl -L -o "$archive_path" "$PYTHON_FRAMEWORK_URL"; then
      echo "‚úÖ –ê—Ä—Ö–∏–≤ —Å–∫–∞—á–∞–Ω"
      
      echo "üì¶ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º Python.framework..."
      cd "$temp_dir"
      tar -xzf "$archive_path"
      
      # –ò—â–µ–º Python.framework –≤ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–º –∞—Ä—Ö–∏–≤–µ
      local extracted_framework=$(find . -name "Python.framework" -type d | head -1)
      if [ -n "$extracted_framework" ]; then
        echo "üìã –ö–æ–ø–∏—Ä—É–µ–º —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω—ã–π Python.framework..."
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç—É –∂–µ —É–º–Ω—É—é –ª–æ–≥–∏–∫—É –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Å–∫–∞—á–∞–Ω–Ω–æ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞
        if cp -R -L "$extracted_framework" "$FRAMEWORKS_DIR/" 2>/dev/null; then
          echo "‚úÖ Python.framework –∏–∑ –∞—Ä—Ö–∏–≤–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Å –ø–æ–ª–Ω—ã–º —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º —Å—Å—ã–ª–æ–∫"
        else
          echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º, –ø—Ä–æ–±—É–µ–º –±–µ–∑ —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏—è..."
          # –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—á–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
          [ -d "$framework_dst" ] && rm -rf "$framework_dst"
          
          if cp -R -P "$extracted_framework" "$FRAMEWORKS_DIR/" 2>/dev/null; then
            echo "‚úÖ Python.framework –∏–∑ –∞—Ä—Ö–∏–≤–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –±–µ–∑ —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫"
          else
            echo "üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã–±–æ—Ä–æ—á–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ..."
            manual_copy_framework "$extracted_framework" "$framework_dst"
          fi
        fi
      else
        echo "‚ùå Python.framework –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∞—Ä—Ö–∏–≤–µ"
        exit 1
      fi
    else
      echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å Python.framework"
      echo "üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python.framework –ª–æ–∫–∞–ª—å–Ω–æ –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç–µ URL"
      exit 1
    fi
  fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–æ—á–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞
manual_copy_framework() {
  local src="$1"
  local dst="$2"
  
  echo "üîß –í—ã–ø–æ–ª–Ω—è–µ–º –≤—ã–±–æ—Ä–æ—á–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞..."
  mkdir -p "$dst"
  
  # –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞, –ø—Ä–æ–≤–µ—Ä—è—è –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç
  for item in "$src"/*; do
    if [ -e "$item" ] || [ -L "$item" ]; then
      local basename=$(basename "$item")
      echo "  üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º: $basename"
      
      if [ -L "$item" ]; then
        # –î–ª—è —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ü–µ–ª—å
        if [ -e "$item" ]; then
          echo "    ‚úÖ –í–∞–ª–∏–¥–Ω–∞—è —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞, –∫–æ–ø–∏—Ä—É–µ–º —Å —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º"
          cp -R -L "$item" "$dst/" 2>/dev/null || {
            echo "    ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞—Ç—å, –∫–æ–ø–∏—Ä—É–µ–º –∫–∞–∫ —Å—Å—ã–ª–∫—É"
            cp -R -P "$item" "$dst/"
          }
        else
          echo "    ‚ö†Ô∏è  –ë–∏—Ç–∞—è —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ ($basename), –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
        fi
      else
        echo "    ‚úÖ –û–±—ã—á–Ω—ã–π —Ñ–∞–π–ª/–ø–∞–ø–∫–∞, –∫–æ–ø–∏—Ä—É–µ–º"
        cp -R "$item" "$dst/"
      fi
    fi
  done
  echo "‚úÖ –í—ã–±–æ—Ä–æ—á–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
}

get_python_framework

# –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ Python
echo "üìã –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–µ—Ä—Å–∏—é Python..."
ACTUAL_PYTHON_VERSION=$(ls "$FRAMEWORKS_DIR/Python.framework/Versions/" | grep -E "^[0-9]+\.[0-9]+$" | head -1)
if [ -n "$ACTUAL_PYTHON_VERSION" ]; then
  PYTHON_VERSION="$ACTUAL_PYTHON_VERSION"
  echo "‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –≤–µ—Ä—Å–∏—è Python: $PYTHON_VERSION"
else
  echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–µ—Ä—Å–∏—é Python, –∏—Å–ø–æ–ª—å–∑—É–µ–º: $PYTHON_VERSION"
fi

# ===================================================================
# –°–û–ó–î–ê–ù–ò–ï –í–ò–†–¢–£–ê–õ–¨–ù–û–ì–û –û–ö–†–£–ñ–ï–ù–ò–Ø
# ===================================================================

echo "üìã –°–æ–∑–¥–∞–µ–º venv..."
PYTHON_BIN="$FRAMEWORKS_DIR/Python.framework/Versions/$PYTHON_VERSION/bin/python3"

if [ ! -f "$PYTHON_BIN" ]; then
  echo "‚ùå Python binary –Ω–µ –Ω–∞–π–¥–µ–Ω: $PYTHON_BIN"
  echo "üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–µ—Ä—Å–∏–∏: $(ls "$FRAMEWORKS_DIR/Python.framework/Versions/" || echo "–Ω–µ—Ç")"
  exit 1
fi

"$PYTHON_BIN" -m venv "$VENV_DST"
echo "‚úÖ venv —Å–æ–∑–¥–∞–Ω"

# ===================================================================
# –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô
# ===================================================================

echo "üìã –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
source "$VENV_DST/bin/activate"

echo "üêç –°–∫–∞—á–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç—ã –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π –∫—ç—à (–µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç)..."
pip download -r "$PROJECT_DIR/Resources/requirements.txt" -d "$PROJECT_DIR/Resources/wheels"

echo "üíø –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç—ã –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫—ç—à–∞..."
pip install --no-index --find-links="$PROJECT_DIR/Resources/wheels" -r "$PROJECT_DIR/Resources/requirements.txt"

deactivate
echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# ===================================================================
# –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –†–ï–°–£–†–°–û–í
# ===================================================================

echo "üñºÔ∏è  –ö–æ–ø–∏—Ä—É–µ–º —Ä–µ—Å—É—Ä—Å—ã..."

# –ö–æ–ø–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å LLM
echo "üß† –ö–æ–ø–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å LLM: $MODEL_FILE_NAME"
cp "$PROJECT_DIR/Resources/$MODEL_FILE_NAME" "$RESOURCES_DIR/"
echo "‚úÖ –ú–æ–¥–µ–ª—å LLM —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞"

# –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
echo "üêç –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è..."
cp "$PROJECT_DIR/Resources/autocomplete.py" "$RESOURCES_DIR/"
echo "‚úÖ –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"

# –ö–æ–ø–∏—Ä—É–µ–º requirements.txt –¥–ª—è Python
echo "üìã –ö–æ–ø–∏—Ä—É–µ–º requirements.txt..."
cp "$PROJECT_DIR/Resources/requirements.txt" "$RESOURCES_DIR/"
echo "‚úÖ requirements.txt —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"

# ===================================================================
# –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–£–¢–ï–ô –ò –ü–û–î–ü–ò–°–¨
# ===================================================================

echo "üìã –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫..."
PYBIN="$VENV_DST/bin/python3"

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫ (–ø–æ–¥–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –ø–æ–¥–ø–∏—Å–∏)
install_name_tool -change \
  "/Library/Frameworks/Python.framework/Versions/$PYTHON_VERSION/lib/libpython${PYTHON_VERSION}.dylib" \
  "@executable_path/../../../Frameworks/Python.framework/Versions/$PYTHON_VERSION/lib/libpython${PYTHON_VERSION}.dylib" \
  "$PYBIN" 2>/dev/null || true
echo "‚úÖ –ü—É—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"

echo "üìã –ü–µ—Ä–µ–ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º python3..."
codesign --force --sign - "$PYBIN" 2>/dev/null || true
echo "‚úÖ –ü–µ—Ä–µ–ø–æ–¥–ø–∏—Å–∞–Ω–æ"


# ===================================================================
# –§–ò–ù–ê–õ–ò–ó–ê–¶–ò–Ø
# ===================================================================

echo "üéâ –£–ü–ê–ö–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!"
echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "   –†–∞–∑–º–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $(du -sh "$APP_PATH" 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å")"
echo "   Python.framework: $(du -sh "$FRAMEWORKS_DIR/Python.framework" 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å")"
echo "   venv: $(du -sh "$VENV_DST" 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å")"
echo "   –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: $(date)"
