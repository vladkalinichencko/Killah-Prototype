#!/usr/bin/env bash
set -euo pipefail

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
error_handler() {
    echo "‚ùå –û–®–ò–ë–ö–ê –Ω–∞ —Å—Ç—Ä–æ–∫–µ $1: –∫–æ–º–∞–Ω–¥–∞ '$2' –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –∫–æ–¥–æ–º $3"
    echo "üìç –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ –º–æ–º–µ–Ω—Ç –æ—à–∏–±–∫–∏:"
    echo "   PWD: $(pwd)"
    echo "   APP_PATH: ${APP_PATH:-'–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}"
    echo "   BUILD_DIR: ${BUILD_DIR:-'–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}"
    exit $3
}

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
trap 'error_handler ${LINENO} "$BASH_COMMAND" $?' ERR

echo "üöÄ –£–ü–ê–ö–û–í–ö–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø"
echo "–í—Ä–µ–º—è: $(date)"
echo "üîß –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
echo "   PWD: $(pwd)"
echo "   BUILT_PRODUCTS_DIR: ${BUILT_PRODUCTS_DIR:-'–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}"
echo "   PRODUCT_NAME: ${PRODUCT_NAME:-'–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}"
echo "   SRCROOT: ${SRCROOT:-'–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}"
echo "   TARGET_NAME: ${TARGET_NAME:-'–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}"
echo "   PROJECT_DIR will be: $(cd "$(dirname "$0")/.." && pwd)"

# ===================================================================
# –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø - –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –º–µ—Å—Ç–æ –≥–¥–µ –∑–∞–¥–∞—é—Ç—Å—è –≤—Å–µ –ø—É—Ç–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
# ===================================================================

PROJECT_DIR="$(cd "$(dirname "$0")/.." && pwd)"
APP_NAME="${PRODUCT_NAME:-Killah Prototype}.app"
PYTHON_VERSION="3.12"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é, –Ω–æ –±—É–¥–µ—Ç –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –ø–æ–∑–∂–µ
VENV_NAME="venv"
# URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≥–æ—Ç–æ–≤–æ–≥–æ Python.framework (–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)
PYTHON_FRAMEWORK_URL="https://github.com/indygreg/python-build-standalone/releases/download/20231207/cpython-3.12.1+20231207-x86_64-apple-darwin.tar.gz"
PYTHON_FRAMEWORK_LOCAL="/Library/Frameworks/Python.framework"
MODEL_FILE_NAME="gemma-3-4b-pt-q4_0.gguf" # <--- –î–û–ë–ê–í–õ–ï–ù–û: –ò–º—è —Ñ–∞–π–ª–∞ –º–æ–¥–µ–ª–∏

# –ü—É—Ç–∏ —Å–±–æ—Ä–∫–∏ –∏–∑ Xcode (—Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
if [ -z "${BUILT_PRODUCTS_DIR:-}" ]; then
  echo "‚ö†Ô∏è  BUILT_PRODUCTS_DIR –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
  BUILD_DIR="$PROJECT_DIR/build/Debug"
else
  BUILD_DIR="$BUILT_PRODUCTS_DIR"
fi

APP_PATH="$BUILD_DIR/$APP_NAME"
FRAMEWORKS_DIR="$APP_PATH/Contents/Frameworks"
RESOURCES_DIR="$APP_PATH/Contents/Resources"
VENV_DST="$RESOURCES_DIR/$VENV_NAME"

echo "üìÅ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: $APP_PATH"

# ===================================================================
# –ü–†–û–í–ï–†–ö–ò –ò –ü–û–î–ì–û–¢–û–í–ö–ê
# ===================================================================

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ .app
if [ ! -d "$APP_PATH" ]; then
  echo "‚ùå .app –Ω–µ –Ω–∞–π–¥–µ–Ω: $APP_PATH"
  exit 1
fi
echo "‚úÖ .app –Ω–∞–π–¥–µ–Ω"

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏
mkdir -p "$FRAMEWORKS_DIR"
mkdir -p "$RESOURCES_DIR"

# ===================================================================
# –ü–û–õ–£–ß–ï–ù–ò–ï PYTHON.FRAMEWORK
# ===================================================================

get_python_framework() {
  local framework_dst="$RESOURCES_DIR/Python.framework"
  
  if [ -d "$PYTHON_FRAMEWORK_LOCAL" ]; then
    echo "üìã –ö–æ–ø–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π Python.framework..."
    
    # –£–º–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ: —Å–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è —Å —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫
    echo "üîó –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫..."
    if cp -R -L "$PYTHON_FRAMEWORK_LOCAL" "$RESOURCES_DIR/" 2>/dev/null; then
      echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π Python.framework —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Å –ø–æ–ª–Ω—ã–º —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º —Å—Å—ã–ª–æ–∫"
    else
      echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º (–±–∏—Ç—ã–µ —Å–∏–º–ª–∏–Ω–∫–∏), –ø—Ä–æ–±—É–µ–º –±–µ–∑ —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏—è..."
      # –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—á–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
      [ -d "$framework_dst" ] && rm -rf "$framework_dst"
      
      if cp -R -P "$PYTHON_FRAMEWORK_LOCAL" "$RESOURCES_DIR/" 2>/dev/null; then
        echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π Python.framework —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –±–µ–∑ —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫"
      else
        echo "‚ùå –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º rsync –∏–ª–∏ –≤—ã–±–æ—Ä–æ—á–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ..."
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º rsync –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
        if command -v rsync >/dev/null 2>&1; then
          echo "üîÑ –ü—ã—Ç–∞–µ–º—Å—è rsync..."
          if rsync -av --exclude='*/PrivateHeaders' "$PYTHON_FRAMEWORK_LOCAL/" "$framework_dst/" 2>/dev/null; then
            echo "‚úÖ Python.framework —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ rsync (–∏—Å–∫–ª—é—á–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ PrivateHeaders)"
          else
            echo "‚ùå rsync —Ç–æ–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –¥–µ–ª–∞–µ–º –≤—ã–±–æ—Ä–æ—á–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ..."
            manual_copy_framework "$PYTHON_FRAMEWORK_LOCAL" "$framework_dst"
          fi
        else
          echo "üìÅ rsync –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –¥–µ–ª–∞–µ–º –≤—ã–±–æ—Ä–æ—á–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ..."
          manual_copy_framework "$PYTHON_FRAMEWORK_LOCAL" "$framework_dst"
        fi
      fi
    fi
  else
    echo "‚ö†Ô∏è  –õ–æ–∫–∞–ª—å–Ω—ã–π Python.framework –Ω–µ –Ω–∞–π–¥–µ–Ω: $PYTHON_FRAMEWORK_LOCAL"
    echo "üì• –°–∫–∞—á–∏–≤–∞–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π Python installer..."
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    local temp_dir=$(mktemp -d)
    trap "rm -rf $temp_dir" EXIT
    
    local pkg_path="$temp_dir/python.pkg"
    
    echo "üåê –°–∫–∞—á–∏–≤–∞–µ–º —Å: $PYTHON_PKG_URL"
    if curl -L -o "$pkg_path" "$PYTHON_PKG_URL"; then
      echo "‚úÖ Python installer —Å–∫–∞—á–∞–Ω"
      
      echo "üì¶ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º .pkg —Ñ–∞–π–ª..."
      cd "$temp_dir"
      
      # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º .pkg (—ç—Ç–æ xar –∞—Ä—Ö–∏–≤)
      if xar -xf "$pkg_path"; then
        echo "‚úÖ .pkg —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω"
        
                 # –ò—â–µ–º Python_Framework.pkg/Payload —Ñ–∞–π–ª (—Å–æ–¥–µ—Ä–∂–∏—Ç Python.framework)
         local payload_file=$(find . -name "Python_Framework.pkg" -type d | head -1)
         if [ -n "$payload_file" ]; then
           echo "üì¶ –ù–∞–π–¥–µ–Ω Python_Framework.pkg, —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –µ–≥–æ Payload..."
           
                       # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ Payload –≤ Python_Framework.pkg
            local framework_payload="$payload_file/Payload"
            if [ -f "$framework_payload" ]; then
              echo "üì¶ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º Payload –∏–∑ Python_Framework.pkg..."
              
              # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ Payload
              mkdir -p payload_extracted/Python.framework
                          # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º Payload (—ç—Ç–æ gzip —Å–∂–∞—Ç—ã–π tar) –≤–Ω—É—Ç—Ä—å Python.framework
            if tar -xzf "$framework_payload" -C payload_extracted/Python.framework; then
              echo "‚úÖ Payload —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω"
              echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–≥–æ Python.framework..."
              echo "   –°—Ç—Ä—É–∫—Ç—É—Ä–∞: $(find payload_extracted/Python.framework -type f -name "python*" | head -5)"
              echo "   –°—Å—ã–ª–∫–∏ –≤ bin/: $(ls -la payload_extracted/Python.framework/Versions/*/bin/ 2>/dev/null | grep python || echo "–ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")"
            
            # –ò—â–µ–º Python.framework –≤ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–º
            local extracted_framework="payload_extracted/Python.framework"
            if [ -n "$extracted_framework" ]; then
              echo "üìã –ö–æ–ø–∏—Ä—É–µ–º Python.framework –∏–∑ installer..."
              
              # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç—É –∂–µ —É–º–Ω—É—é –ª–æ–≥–∏–∫—É –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
        if cp -R -L "$extracted_framework" "$RESOURCES_DIR/" 2>/dev/null; then
                echo "‚úÖ Python.framework –∏–∑ installer —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Å –ø–æ–ª–Ω—ã–º —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º —Å—Å—ã–ª–æ–∫"
        else
                echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±..."
          # –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—á–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
          [ -d "$framework_dst" ] && rm -rf "$framework_dst"
          
                # –ü—Ä–æ–±—É–µ–º —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º
                echo "üîÑ –ö–æ–ø–∏—Ä—É–µ–º —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º..."
                if rsync -avL "$extracted_framework/" "$RESOURCES_DIR/Python.framework/" 2>/dev/null; then
                  echo "‚úÖ Python.framework —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ rsync —Å —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º"
                elif cp -R -P "$extracted_framework" "$RESOURCES_DIR/" 2>/dev/null; then
                  echo "‚úÖ Python.framework –∏–∑ installer —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –±–µ–∑ —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫"
                  echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π Python.framework..."
                  echo "   –°—Å—ã–ª–∫–∏ –≤ bin/: $(ls -la "$RESOURCES_DIR/Python.framework/Versions/*/bin/" 2>/dev/null | grep python || echo "–ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")"
                  echo "   –†–∞–∑–º–µ—Ä python3: $(ls -lh "$RESOURCES_DIR/Python.framework/Versions/*/bin/python3" 2>/dev/null || echo "—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")"
                  
                  # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ –≤ Python binary
                  echo "üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ –≤ Python.framework..."
                  local python_binary="$RESOURCES_DIR/Python.framework/Versions/$PYTHON_VERSION/bin/python3"
                  if [ -L "$python_binary" ]; then
                    echo "   –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –≤ python3 binary..."
                    local target=$(readlink "$python_binary")
                    echo "   –¶–µ–ª—å —Å—Å—ã–ª–∫–∏: $target"
                    
                    # –ò—â–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ü–µ–ª—å —Å—Å—ã–ª–∫–∏
                    local target_path=""
                    if [ -f "$RESOURCES_DIR/Python.framework/Versions/$PYTHON_VERSION/bin/$target" ]; then
                      target_path="$RESOURCES_DIR/Python.framework/Versions/$PYTHON_VERSION/bin/$target"
                    elif [ -f "$RESOURCES_DIR/Python.framework/Versions/$PYTHON_VERSION/$target" ]; then
                      target_path="$RESOURCES_DIR/Python.framework/Versions/$PYTHON_VERSION/$target"
                    elif [ -f "$RESOURCES_DIR/Python.framework/Versions/$PYTHON_VERSION/Python" ]; then
                      target_path="$RESOURCES_DIR/Python.framework/Versions/$PYTHON_VERSION/Python"
                    else
                      echo "   üîç –ò—â–µ–º Python binary –≤ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–µ..."
                      local found_python=$(find "$RESOURCES_DIR/Python.framework" -name "Python" -type f | head -1)
                      if [ -n "$found_python" ]; then
                        target_path="$found_python"
                        echo "   –ù–∞–π–¥–µ–Ω Python binary: $found_python"
                      fi
                    fi
                    
                    if [ -n "$target_path" ] && [ -f "$target_path" ]; then
                      echo "   –ö–æ–ø–∏—Ä—É–µ–º $target_path –≤ $python_binary"
                      rm "$python_binary"
                      cp "$target_path" "$python_binary"
                      chmod +x "$python_binary"
                                        echo "   ‚úÖ python3 binary –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"
                  
                  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python binary
                  echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python binary..."
                  local deps=$(otool -L "$python_binary" | grep -v ":" | grep -v "@executable_path" | awk '{print $1}' | grep -v "^$")
                  if [ -n "$deps" ]; then
                    echo "   –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: $deps"
                    echo "   –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º..."
                    
                    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Python
                    install_name_tool -change \
                      "/Library/Frameworks/Python.framework/Versions/$PYTHON_VERSION/Python" \
                      "@executable_path/../../../Python" \
                      "$python_binary" 2>/dev/null || true
                    
                    install_name_tool -change \
                      "/Library/Frameworks/Python.framework/Versions/$PYTHON_VERSION/lib/libpython${PYTHON_VERSION}.dylib" \
                      "@executable_path/../../../lib/libpython${PYTHON_VERSION}.dylib" \
                      "$python_binary" 2>/dev/null || true
                    
                                      echo "   ‚úÖ –ü—É—Ç–∏ –∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
                else
                  echo "   ‚úÖ –ù–µ—Ç –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
                fi
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ Python.framework
                echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É Python.framework..."
                local python_main="$RESOURCES_DIR/Python.framework/Versions/$PYTHON_VERSION/Python"
                local python_lib="$RESOURCES_DIR/Python.framework/Versions/$PYTHON_VERSION/lib/libpython${PYTHON_VERSION}.dylib"
                
                if [ -f "$python_main" ]; then
                  echo "   ‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π Python binary –Ω–∞–π–¥–µ–Ω: $(ls -lh "$python_main")"
                else
                  echo "   ‚ùå –û—Å–Ω–æ–≤–Ω–æ–π Python binary –Ω–µ –Ω–∞–π–¥–µ–Ω: $python_main"
                fi
                
                if [ -f "$python_lib" ]; then
                  echo "   ‚úÖ Python –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: $(ls -lh "$python_lib")"
                  
                  # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ
                  if [ -L "$python_lib" ]; then
                    echo "   –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –≤ libpython..."
                    local lib_target=$(readlink "$python_lib")
                    if [ -f "$lib_target" ]; then
                      rm "$python_lib"
                      cp "$lib_target" "$python_lib"
                      echo "   ‚úÖ libpython –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"
                    fi
                  fi
                else
                  echo "   ‚ùå Python –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $python_lib"
                fi
                
                # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π Python binary
                if [ -f "$python_main" ]; then
                  echo "   –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ Python binary..."
                  install_name_tool -change \
                    "/Library/Frameworks/Python.framework/Versions/$PYTHON_VERSION/Python" \
                    "@executable_path/Python" \
                    "$python_main" 2>/dev/null || true
                  
                  install_name_tool -change \
                    "/Library/Frameworks/Python.framework/Versions/$PYTHON_VERSION/lib/libpython${PYTHON_VERSION}.dylib" \
                    "@executable_path/lib/libpython${PYTHON_VERSION}.dylib" \
                    "$python_main" 2>/dev/null || true
                  
                  echo "   ‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π Python binary –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"
                fi
                else
                  echo "   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π Python binary"
                  echo "   üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ bin/: $(ls "$RESOURCES_DIR/Python.framework/Versions/$PYTHON_VERSION/bin/" 2>/dev/null || echo "–ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")"
                fi
              fi
                  
                  # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥—Ä—É–≥–∏–µ –≤–∞–∂–Ω—ã–µ —Å—Å—ã–ª–∫–∏
                  local python_binary_alt="$RESOURCES_DIR/Python.framework/Versions/$PYTHON_VERSION/bin/python"
                  if [ -L "$python_binary_alt" ]; then
                    echo "   –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –≤ python binary..."
                    local target=$(readlink "$python_binary_alt")
                    echo "   –¶–µ–ª—å —Å—Å—ã–ª–∫–∏: $target"
                    
                    # –ò—â–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ü–µ–ª—å —Å—Å—ã–ª–∫–∏
                    local target_path=""
                    if [ -f "$RESOURCES_DIR/Python.framework/Versions/$PYTHON_VERSION/bin/$target" ]; then
                      target_path="$RESOURCES_DIR/Python.framework/Versions/$PYTHON_VERSION/bin/$target"
                    elif [ -f "$RESOURCES_DIR/Python.framework/Versions/$PYTHON_VERSION/Python" ]; then
                      target_path="$RESOURCES_DIR/Python.framework/Versions/$PYTHON_VERSION/Python"
                    fi
                    
                    if [ -n "$target_path" ] && [ -f "$target_path" ]; then
                      rm "$python_binary_alt"
                      cp "$target_path" "$python_binary_alt"
                      chmod +x "$python_binary_alt"
                      echo "   ‚úÖ python binary –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"
                    fi
                  fi
                  
          else
            echo "üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã–±–æ—Ä–æ—á–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ..."
            manual_copy_framework "$extracted_framework" "$framework_dst"
          fi
        fi
      else
              echo "‚ùå Python.framework –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ installer"
              echo "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ Payload: $(find . -type d | head -10)"
              exit 1
            fi
          else
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å Payload"
            exit 1
                                    fi
           else
             echo "‚ùå Payload –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Python_Framework.pkg"
             echo "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ Python_Framework.pkg: $(ls -la "$payload_file" 2>/dev/null || echo "–ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")"
             exit 1
           fi
         else
           echo "‚ùå Python_Framework.pkg –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .pkg"
           echo "üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã: $(find . -type f | head -10)"
           exit 1
         fi
       else
         echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å .pkg —Ñ–∞–π–ª"
        exit 1
      fi
    else
       echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å Python installer"
       echo "üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python.framework –ª–æ–∫–∞–ª—å–Ω–æ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"
      exit 1
    fi
  fi
   
   # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –≤ Python.framework –ø–æ—Å–ª–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
   echo "üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –≤ Python.framework..."
   local python_framework="$RESOURCES_DIR/Python.framework"
   local python_binary="$python_framework/Versions/$PYTHON_VERSION/bin/python3"
   
   if [ -f "$python_binary" ]; then
     # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º Python
     install_name_tool -change \
       "/Library/Frameworks/Python.framework/Versions/$PYTHON_VERSION/Python" \
       "@executable_path/../../../Python" \
       "$python_binary" 2>/dev/null || true
     
     # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ libpython
     install_name_tool -change \
       "/Library/Frameworks/Python.framework/Versions/$PYTHON_VERSION/lib/libpython${PYTHON_VERSION}.dylib" \
       "@executable_path/../../../lib/libpython${PYTHON_VERSION}.dylib" \
       "$python_binary" 2>/dev/null || true
     
     echo "‚úÖ –ü—É—Ç–∏ –≤ Python.framework –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
   else
     echo "‚ö†Ô∏è  Python binary –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É—Ç–µ–π: $python_binary"
   fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–æ—á–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞
manual_copy_framework() {
  local src="$1"
  local dst="$2"
  
  echo "üîß –í—ã–ø–æ–ª–Ω—è–µ–º –≤—ã–±–æ—Ä–æ—á–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞..."
  mkdir -p "$dst"
  
  # –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞, –ø—Ä–æ–≤–µ—Ä—è—è –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç
  for item in "$src"/*; do
    if [ -e "$item" ] || [ -L "$item" ]; then
      local basename=$(basename "$item")
      echo "  üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º: $basename"
      
      if [ -L "$item" ]; then
        # –î–ª—è —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ü–µ–ª—å
        if [ -e "$item" ]; then
          echo "    ‚úÖ –í–∞–ª–∏–¥–Ω–∞—è —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞, –∫–æ–ø–∏—Ä—É–µ–º —Å —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º"
          cp -R -L "$item" "$dst/" 2>/dev/null || {
            echo "    ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞—Ç—å, –∫–æ–ø–∏—Ä—É–µ–º –∫–∞–∫ —Å—Å—ã–ª–∫—É"
            cp -R -P "$item" "$dst/"
          }
        else
          echo "    ‚ö†Ô∏è  –ë–∏—Ç–∞—è —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ ($basename), –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
        fi
      else
        echo "    ‚úÖ –û–±—ã—á–Ω—ã–π —Ñ–∞–π–ª/–ø–∞–ø–∫–∞, –∫–æ–ø–∏—Ä—É–µ–º"
        cp -R "$item" "$dst/"
      fi
    fi
  done
  echo "‚úÖ –í—ã–±–æ—Ä–æ—á–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
}

get_python_framework

# –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ Python
echo "üìã –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–µ—Ä—Å–∏—é Python..."
ACTUAL_PYTHON_VERSION=$(ls "$RESOURCES_DIR/Python.framework/Versions/" | grep -E "^[0-9]+\.[0-9]+$" | head -1)
if [ -n "$ACTUAL_PYTHON_VERSION" ]; then
  PYTHON_VERSION="$ACTUAL_PYTHON_VERSION"
  echo "‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –≤–µ—Ä—Å–∏—è Python: $PYTHON_VERSION"
else
  echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–µ—Ä—Å–∏—é Python, –∏—Å–ø–æ–ª—å–∑—É–µ–º: $PYTHON_VERSION"
fi

# ===================================================================
# –°–û–ó–î–ê–ù–ò–ï VENV –° –õ–û–ö–ê–õ–¨–ù–´–ú PYTHON
# ===================================================================

echo "üìã –°–æ–∑–¥–∞–µ–º venv —Å –ª–æ–∫–∞–ª—å–Ω—ã–º Python..."

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π Python.framework –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è venv
LOCAL_PYTHON="$RESOURCES_DIR/Python.framework/Versions/$PYTHON_VERSION/bin/python3"

if [ ! -f "$LOCAL_PYTHON" ]; then
  echo "‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π Python –Ω–µ –Ω–∞–π–¥–µ–Ω: $LOCAL_PYTHON"
  exit 1
fi

echo "‚úÖ –ù–∞–π–¥–µ–Ω –ª–æ–∫–∞–ª—å–Ω—ã–π Python: $LOCAL_PYTHON"
echo "üîç –†–∞–∑–º–µ—Ä: $(ls -lh "$LOCAL_PYTHON" 2>/dev/null | awk '{print $5}' || echo "–ù–ï–ò–ó–í–ï–°–¢–ù–û")"

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π venv
echo "üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π venv..."
rm -rf "$VENV_DST"

# –°–æ–∑–¥–∞–µ–º venv —Å –ª–æ–∫–∞–ª—å–Ω—ã–º Python
echo "üöÄ –°–æ–∑–¥–∞–µ–º venv..."
cd "$RESOURCES_DIR/Python.framework/Versions/$PYTHON_VERSION/bin"
./python3 -m venv "$VENV_DST"

if [ -f "$VENV_DST/bin/python" ]; then
  echo "‚úÖ venv —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
else
  echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å venv"
  echo "üí° –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ venv –∏ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
  echo "üí° –ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å venv –ø–æ–∑–∂–µ –≤—Ä—É—á–Ω—É—é"
fi

# ===================================================================
# –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô
# ===================================================================

echo "üìã –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–∑–¥–∞–Ω –ª–∏ venv
if [ -f "$VENV_DST/bin/python" ]; then
  echo "‚úÖ Venv –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
  source "$VENV_DST/bin/activate"

  echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –≤ venv..."
  echo "   Python: $(which python)"
  echo "   –í–µ—Ä—Å–∏—è: $(python --version 2>&1)"

  echo "üíø –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç—ã (—Å–Ω–∞—á–∞–ª–∞ –∏–∑ –∫—ç—à–∞, –ø–æ—Ç–æ–º –∏–∑ —Å–µ—Ç–∏)..."
  pip install --find-links="$PROJECT_DIR/Resources/wheels" -r "$PROJECT_DIR/Resources/requirements.txt"

  echo "‚¨ÜÔ∏è  –û–±–Ω–æ–≤–ª—è–µ–º pip –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏‚Ä¶"
  pip install --upgrade pip

  echo "‚¨ÜÔ∏è  –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–∫–µ—Ç—ã –¥–æ —Å–≤–µ–∂–∏—Ö –≤–µ—Ä—Å–∏–π‚Ä¶"
  pip install --upgrade --upgrade-strategy eager --find-links="$PROJECT_DIR/Resources/wheels" -r "$PROJECT_DIR/Resources/requirements.txt"

  deactivate
  echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
  echo "‚è≠Ô∏è  Venv –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
  echo "üí° –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∑–∂–µ –≤—Ä—É—á–Ω—É—é"
fi

# ===================================================================
# –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –†–ï–°–£–†–°–û–í
# ===================================================================

echo "üñºÔ∏è  –ö–æ–ø–∏—Ä—É–µ–º —Ä–µ—Å—É—Ä—Å—ã..."

# –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
echo "üêç –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è..."
cp "$PROJECT_DIR/Resources/autocomplete.py" "$RESOURCES_DIR/"
echo "‚úÖ –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"

# –ö–æ–ø–∏—Ä—É–µ–º requirements.txt –¥–ª—è Python
echo "üìã –ö–æ–ø–∏—Ä—É–µ–º requirements.txt..."
cp "$PROJECT_DIR/Resources/requirements.txt" "$RESOURCES_DIR/"
echo "‚úÖ requirements.txt —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"

# ===================================================================
# –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–£–¢–ï–ô –ò –ü–û–î–ü–ò–°–¨
# ===================================================================

echo "üìã –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫..."
PYBIN="$VENV_DST/bin/python3"

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫ (–ø–æ–¥–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –ø–æ–¥–ø–∏—Å–∏)
install_name_tool -change \
  "/Library/Frameworks/Python.framework/Versions/$PYTHON_VERSION/lib/libpython${PYTHON_VERSION}.dylib" \
  "@executable_path/../../../Frameworks/Python.framework/Versions/$PYTHON_VERSION/lib/libpython${PYTHON_VERSION}.dylib" \
  "$PYBIN" 2>/dev/null || true
echo "‚úÖ –ü—É—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"

echo "üìã –ü–µ—Ä–µ–ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º python3..."
codesign --force --sign - "$PYBIN" 2>/dev/null || true
echo "‚úÖ –ü–µ—Ä–µ–ø–æ–¥–ø–∏—Å–∞–Ω–æ"


# ===================================================================
# –§–ò–ù–ê–õ–ò–ó–ê–¶–ò–Ø
# ===================================================================

echo "üéâ –£–ü–ê–ö–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!"
echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "   –†–∞–∑–º–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $(du -sh "$APP_PATH" 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å")"
echo "   Python.framework: $(du -sh "$RESOURCES_DIR/Python.framework" 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å")"
echo "   ‚è≠Ô∏è  venv: –ø—Ä–æ–ø—É—â–µ–Ω (–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø–æ–∑–∂–µ)"
echo "   –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: $(date)"
