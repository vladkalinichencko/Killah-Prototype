import os
import re
import json
import chardet
from pathlib import Path

# –ü–∞–ø–∫–∞ —Å .txt —Ñ–∞–π–ª–∞–º–∏
input_folder = Path(
    "C:/Users/serma/killah_project/datasets/TextDatasets/BooksDatasets/russian_books")
output_file = Path(
    "C:/Users/serma/killah_project/datasets/TextDatasets/BooksDatasets/long_books_ru_cleaned.jsonl")

# –ü—Ä–∏–≤—è–∑–∫–∞ –∞–≤—Ç–æ—Ä–æ–≤ –∫ –Ω–∞–∑–≤–∞–Ω–∏—è–º (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
AUTHOR_MAP = {
    "pushkina": "–ü—É—à–∫–∏–Ω",
    "pushkin": "–ü—É—à–∫–∏–Ω",
    "dostoevsky": "–î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π",
    "dostoevskiy": "–î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π",
    "tolstoy": "–¢–æ–ª—Å—Ç–æ–π",
    "voina_i_mir": "–¢–æ–ª—Å—Ç–æ–π",
}

# –û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º


def clean_text(text: str, top_cut=0.05, bottom_cut=0.05) -> str:
    # –£–¥–∞–ª–µ–Ω–∏–µ –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞
    n = len(text)
    # text = text[int(n * top_cut): int(n * (1 - bottom_cut))]
    # –°–∏–º–≤–æ–ª—ã —Ä–∞–∑—Ä—ã–≤–æ–≤, —Ç–∞–±—É–ª—è—Ü–∏–∏
    text = text.replace('\n', ' ').replace('\r', ' ').replace('\t', ' ')
    # –î–≤–æ–π–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã
    text = re.sub(r'\s{2,}', ' ', text)
    # –£–¥–∞–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∏
    garbage = [
        "‚Ä¢", "‚óä", "‚óÜ", "‚ñ°", "‚ñ†", "‚ñ∂", "‚ó¶", "‚ñ™", "‚ñ∫", "‚Äª", "‚ùñ",
        "‚Ñ¢", "¬©", "¬Æ", "‚Äî", "‚Äì", "‚Äï", "¬∑", "‚Ä¶", "<<", ">>",
        "‚Ä†", "‚Ä°", "¬ß", "¬∂", "~", "¬§", "¬∞", "¬∫", "√ó", "‚ÇΩ", "‚Ññ"
    ]
    for symbol in garbage:
        text = text.replace(symbol, "")
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤ –Ω–µ –∏–∑ —è–∑—ã–∫–∞ (–Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ–º .,!? –∏ –∫–∞–≤—ã—á–∫–∏)
    text = re.sub(r"[^\w\s–∞-—è–ê-–Ø—ë–Å.,!?\"'():;\\/-]", "", text)
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è
    text = re.sub(r'\s{2,}', ' ', text)
    return text.strip()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
with output_file.open("w", encoding="utf-8") as fout:
    for file_path in input_folder.glob("*.txt"):
        with file_path.open("rb") as f:
            raw_data = f.read()
            result = chardet.detect(raw_data)
            encoding = result['encoding']

        with file_path.open("r", encoding=encoding, errors='replace') as f:
            raw = f.read()

        cleaned = clean_text(raw)

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        title = file_path.stem.replace("_", " ").title()

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞
        filename = file_path.stem.lower()
        author = "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"
        for key in AUTHOR_MAP:
            if key in filename:
                author = AUTHOR_MAP[key]
                break

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏
        json.dump({
            "title": title,
            "author": author,
            "text": cleaned
        }, fout, ensure_ascii=False)
        fout.write("\n")
        print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {title} ‚Äî {author}")

print(f"\nüéØ –ì–æ—Ç–æ–≤–æ! –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–Ω–∏–≥: {len(list(input_folder.glob('*.txt')))}")
